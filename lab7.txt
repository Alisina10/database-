alisinajawid@Alis-MacBook-Air database- 

psql (14.19 (Homebrew))
Type "help" for help.

postgres=# 
postgres=# DROP TABLE IF EXISTS course_enrollments;
DROP TABLE IF EXISTS students;
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS transactions;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS customers;
DROP TABLE IF EXISTS departments;

CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE,
    faculty VARCHAR(50)
);

INSERT INTO students (name, email, faculty) VALUES
('Alice Johnson', 'alice@alatoo.edu.kg', 'Computer Science'),
('Bob Smith', 'bob@alatoo.edu.kg', 'Mathematics'),
('Carol Davis', 'carol@alatoo.edu.kg', 'Computer Science');

CREATE TABLE course_enrollments (
    student_id INTEGER,
    course_id INTEGER,
    semester VARCHAR(20),
    enrollment_date DATE DEFAULT CURRENT_DATE,
    grade CHAR(2),
    PRIMARY KEY (student_id, course_id, semester)
);

INSERT INTO course_enrollments (student_id, course_id, semester, grade) VALUES
(1, 101, '2024-Spring', 'A'),
(1, 102, '2024-Spring', 'B+'),
(2, 101, '2024-Spring', 'A-'),
(1, 101, '2024-Fall', 'A+');

CREATE TABLE products (
    product_id SERIAL PRIMARY KEY,
    product_name VARCHAR(100) NOT NULL,
    price DECIMAL(10,2)
);

CREATE TABLE transactions (
    transaction_id BIGSERIAL PRIMARY KEY,
    amount DECIMAL(15,2),
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE orders (
    order_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    order_date DATE DEFAULT CURRENT_DATE
);

CREATE TABLE customers (
    customer_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(100),
    email VARCHAR(150)
);

INSERT INTO customers (customer_id, customer_name, email)
VALUES (1000, 'VIP Customer', 'vip@example.com');

CREATE TABLE departments (
    dept_id INTEGER PRIMARY KEY,
    dept_name VARCHAR(100)
);

\pset pager off
\dt
\d+ students
\d+ course_enrollments
\d+ products
\d+ transactions
\d+ orders
\d+ customers
\d+ departments

SELECT * FROM students;
SELECT * FROM course_enrollments;
SELECT * FROM customers;
NOTICE:  table "course_enrollments" does not exist, skipping
DROP TABLE
DROP TABLE
NOTICE:  table "products" does not exist, skipping
DROP TABLE
NOTICE:  table "transactions" does not exist, skipping
DROP TABLE
NOTICE:  table "orders" does not exist, skipping
DROP TABLE
NOTICE:  table "customers" does not exist, skipping
DROP TABLE
NOTICE:  table "departments" does not exist, skipping
DROP TABLE
CREATE TABLE
INSERT 0 3
CREATE TABLE
INSERT 0 4
CREATE TABLE
CREATE TABLE
CREATE TABLE
CREATE TABLE
INSERT 0 1
CREATE TABLE
Pager usage is off.
               List of relations
 Schema |        Name        | Type  |  Owner   
--------+--------------------+-------+----------
 public | course_enrollments | table | postgres
 public | courses            | table | postgres
 public | customers          | table | postgres
 public | departments        | table | postgres
 public | orders             | table | postgres
 public | products           | table | postgres
 public | students           | table | postgres
 public | transactions       | table | postgres
(8 rows)

                                                                     Table "public.students"
   Column   |          Type          | Collation | Nullable |                   Default                    | Storage  | Compression | Stats target | Description 
------------+------------------------+-----------+----------+----------------------------------------------+----------+-------------+--------------+-------------
 student_id | integer                |           | not null | nextval('students_student_id_seq'::regclass) | plain    |             |              | 
 name       | character varying(100) |           | not null |                                              | extended |             |              | 
 email      | character varying(150) |           |          |                                              | extended |             |              | 
 faculty    | character varying(50)  |           |          |                                              | extended |             |              | 
Indexes:
    "students_pkey" PRIMARY KEY, btree (student_id)
    "students_email_key" UNIQUE CONSTRAINT, btree (email)
Access method: heap

                                                  Table "public.course_enrollments"
     Column      |         Type          | Collation | Nullable |   Default    | Storage  | Compression | Stats target | Description 
-----------------+-----------------------+-----------+----------+--------------+----------+-------------+--------------+-------------
 student_id      | integer               |           | not null |              | plain    |             |              | 
 course_id       | integer               |           | not null |              | plain    |             |              | 
 semester        | character varying(20) |           | not null |              | extended |             |              | 
 enrollment_date | date                  |           |          | CURRENT_DATE | plain    |             |              | 
 grade           | character(2)          |           |          |              | extended |             |              | 
Indexes:
    "course_enrollments_pkey" PRIMARY KEY, btree (student_id, course_id, semester)
Access method: heap

                                                                      Table "public.products"
    Column    |          Type          | Collation | Nullable |                   Default                    | Storage  | Compression | Stats target | Description 
--------------+------------------------+-----------+----------+----------------------------------------------+----------+-------------+--------------+-------------
 product_id   | integer                |           | not null | nextval('products_product_id_seq'::regclass) | plain    |             |              | 
 product_name | character varying(100) |           | not null |                                              | extended |             |              | 
 price        | numeric(10,2)          |           |          |                                              | main     |             |              | 
Indexes:
    "products_pkey" PRIMARY KEY, btree (product_id)
Access method: heap

                                                                            Table "public.transactions"
      Column      |            Type             | Collation | Nullable |                       Default                        | Storage | Compression | Stats target | Description 
------------------+-----------------------------+-----------+----------+------------------------------------------------------+---------+-------------+--------------+-------------
 transaction_id   | bigint                      |           | not null | nextval('transactions_transaction_id_seq'::regclass) | plain   |             |              | 
 amount           | numeric(15,2)               |           |          |                                                      | main    |             |              | 
 transaction_date | timestamp without time zone |           |          | CURRENT_TIMESTAMP                                    | plain   |             |              | 
Indexes:
    "transactions_pkey" PRIMARY KEY, btree (transaction_id)
Access method: heap

                                                               Table "public.orders"
    Column     |          Type          | Collation | Nullable |           Default            | Storage  | Compression | Stats target | Description 
---------------+------------------------+-----------+----------+------------------------------+----------+-------------+--------------+-------------
 order_id      | integer                |           | not null | generated always as identity | plain    |             |              | 
 customer_name | character varying(100) |           |          |                              | extended |             |              | 
 order_date    | date                   |           |          | CURRENT_DATE                 | plain    |             |              | 
Indexes:
    "orders_pkey" PRIMARY KEY, btree (order_id)
Access method: heap

                                                                Table "public.customers"
    Column     |          Type          | Collation | Nullable |             Default              | Storage  | Compression | Stats target | Description 
---------------+------------------------+-----------+----------+----------------------------------+----------+-------------+--------------+-------------
 customer_id   | integer                |           | not null | generated by default as identity | plain    |             |              | 
 customer_name | character varying(100) |           |          |                                  | extended |             |              | 
 email         | character varying(150) |           |          |                                  | extended |             |              | 
Indexes:
    "customers_pkey" PRIMARY KEY, btree (customer_id)
Access method: heap

                                                Table "public.departments"
  Column   |          Type          | Collation | Nullable | Default | Storage  | Compression | Stats target | Description 
-----------+------------------------+-----------+----------+---------+----------+-------------+--------------+-------------
 dept_id   | integer                |           | not null |         | plain    |             |              | 
 dept_name | character varying(100) |           |          |         | extended |             |              | 
Indexes:
    "departments_pkey" PRIMARY KEY, btree (dept_id)
Access method: heap

\d+: extra argument "SELECT" ignored
\d+: extra argument "*" ignored
\d+: extra argument "FROM" ignored
\d+: extra argument "students;" ignored
\d+: extra argument "SELECT" ignored
\d+: extra argument "*" ignored
\d+: extra argument "FROM" ignored
\d+: extra argument "course_enrollments;" ignored
\d+: extra argument "SELECT" ignored
\d+: extra argument "*" ignored
\d+: extra argument "FROM" ignored
\d+: extra argument "customers;" ignored
postgres=# \q
exit
\q: extra argument "exit" ignored
alisinajawid@Alis-MacBook-Air database- % 
